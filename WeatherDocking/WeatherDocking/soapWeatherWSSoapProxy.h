/* soapWeatherWSSoapProxy.h
   Generated by gSOAP 2.8.124 for F:\OPT8443\webservice\WeatherDocking\WeatherDocking\weatherdocking.h

gSOAP XML Web services tools
Copyright (C) 2000-2022, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/

#ifndef soapWeatherWSSoapProxy_H
#define soapWeatherWSSoapProxy_H
#include "soapH.h"

    class SOAP_CMAC WeatherWSSoapProxy : public soap {
      public:
        /// Endpoint URL of service 'WeatherWSSoapProxy' (change as needed)
        const char *soap_endpoint;
        /// Variables globally declared in F:\OPT8443\webservice\WeatherDocking\WeatherDocking\weatherdocking.h, if any
        /// Construct a proxy with new managing context
        WeatherWSSoapProxy();
        /// Copy constructor
        WeatherWSSoapProxy(const WeatherWSSoapProxy& rhs);
        /// Construct proxy given a managing context
        WeatherWSSoapProxy(const struct soap&);
        /// Construct proxy given a managing context and endpoint URL
        WeatherWSSoapProxy(const struct soap&, const char *soap_endpoint_url);
        /// Constructor taking an endpoint URL
        WeatherWSSoapProxy(const char *soap_endpoint_url);
        /// Constructor taking input and output mode flags for the new managing context
        WeatherWSSoapProxy(soap_mode iomode);
        /// Constructor taking endpoint URL and input and output mode flags for the new managing context
        WeatherWSSoapProxy(const char *soap_endpoint_url, soap_mode iomode);
        /// Constructor taking input and output mode flags for the new managing context
        WeatherWSSoapProxy(soap_mode imode, soap_mode omode);
        /// Destructor deletes deserialized data and its managing context
        virtual ~WeatherWSSoapProxy();
        /// Initializer used by constructors
        virtual void WeatherWSSoapProxy_init(soap_mode imode, soap_mode omode);
        /// Return a copy that has a new managing context with the same engine state
        virtual WeatherWSSoapProxy *copy();
        /// Copy assignment
        WeatherWSSoapProxy& operator=(const WeatherWSSoapProxy&);
        /// Delete all deserialized data (uses soap_destroy() and soap_end())
        virtual void destroy();
        /// Delete all deserialized data and reset to default
        virtual void reset();
        /// Disables and removes SOAP Header from message by setting soap->header = NULL
        virtual void soap_noheader();
        /// Get SOAP Header structure (i.e. soap->header, which is NULL when absent)
        virtual ::SOAP_ENV__Header *soap_header();
        /// Get SOAP Fault structure (i.e. soap->fault, which is NULL when absent)
        virtual ::SOAP_ENV__Fault *soap_fault();
        /// Get SOAP Fault subcode QName string (NULL when absent)
        virtual const char *soap_fault_subcode();
        /// Get SOAP Fault string/reason (NULL when absent)
        virtual const char *soap_fault_string();
        /// Get SOAP Fault detail XML string (NULL when absent)
        virtual const char *soap_fault_detail();
        /// Close connection (normally automatic, except for send_X ops)
        virtual int soap_close_socket();
        /// Force close connection (can kill a thread blocked on IO)
        virtual int soap_force_close_socket();
        /// Print fault
        virtual void soap_print_fault(FILE*);
    #ifndef WITH_LEAN
    #ifndef WITH_COMPAT
        /// Print fault to stream
        virtual void soap_stream_fault(std::ostream&);
    #endif
        /// Write fault to buffer
        virtual char *soap_sprint_fault(char *buf, size_t len);
    #endif
        //
        /// Web service synchronous operation 'getRegionDataset' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getRegionDataset(_ns1__getRegionDataset *ns1__getRegionDataset, _ns1__getRegionDatasetResponse &ns1__getRegionDatasetResponse) { return this->getRegionDataset(NULL, NULL, ns1__getRegionDataset, ns1__getRegionDatasetResponse); }
        /// Web service synchronous operation 'getRegionDataset' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getRegionDataset(const char *soap_endpoint_url, const char *soap_action, _ns1__getRegionDataset *ns1__getRegionDataset, _ns1__getRegionDatasetResponse &ns1__getRegionDatasetResponse) { return this->send_getRegionDataset(soap_endpoint_url, soap_action, ns1__getRegionDataset) || this->recv_getRegionDataset(ns1__getRegionDatasetResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getRegionDataset' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getRegionDataset(const char *soap_endpoint_url, const char *soap_action, _ns1__getRegionDataset *ns1__getRegionDataset);
        /// Web service asynchronous operation 'recv_getRegionDataset' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getRegionDataset(_ns1__getRegionDatasetResponse &ns1__getRegionDatasetResponse);
        //
        /// Web service synchronous operation 'getRegionProvince' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getRegionProvince(_ns1__getRegionProvince *ns1__getRegionProvince, _ns1__getRegionProvinceResponse &ns1__getRegionProvinceResponse) { return this->getRegionProvince(NULL, NULL, ns1__getRegionProvince, ns1__getRegionProvinceResponse); }
        /// Web service synchronous operation 'getRegionProvince' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getRegionProvince(const char *soap_endpoint_url, const char *soap_action, _ns1__getRegionProvince *ns1__getRegionProvince, _ns1__getRegionProvinceResponse &ns1__getRegionProvinceResponse) { return this->send_getRegionProvince(soap_endpoint_url, soap_action, ns1__getRegionProvince) || this->recv_getRegionProvince(ns1__getRegionProvinceResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getRegionProvince' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getRegionProvince(const char *soap_endpoint_url, const char *soap_action, _ns1__getRegionProvince *ns1__getRegionProvince);
        /// Web service asynchronous operation 'recv_getRegionProvince' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getRegionProvince(_ns1__getRegionProvinceResponse &ns1__getRegionProvinceResponse);
        //
        /// Web service synchronous operation 'getRegionCountry' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getRegionCountry(_ns1__getRegionCountry *ns1__getRegionCountry, _ns1__getRegionCountryResponse &ns1__getRegionCountryResponse) { return this->getRegionCountry(NULL, NULL, ns1__getRegionCountry, ns1__getRegionCountryResponse); }
        /// Web service synchronous operation 'getRegionCountry' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getRegionCountry(const char *soap_endpoint_url, const char *soap_action, _ns1__getRegionCountry *ns1__getRegionCountry, _ns1__getRegionCountryResponse &ns1__getRegionCountryResponse) { return this->send_getRegionCountry(soap_endpoint_url, soap_action, ns1__getRegionCountry) || this->recv_getRegionCountry(ns1__getRegionCountryResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getRegionCountry' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getRegionCountry(const char *soap_endpoint_url, const char *soap_action, _ns1__getRegionCountry *ns1__getRegionCountry);
        /// Web service asynchronous operation 'recv_getRegionCountry' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getRegionCountry(_ns1__getRegionCountryResponse &ns1__getRegionCountryResponse);
        //
        /// Web service synchronous operation 'getSupportCityDataset' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getSupportCityDataset(_ns1__getSupportCityDataset *ns1__getSupportCityDataset, _ns1__getSupportCityDatasetResponse &ns1__getSupportCityDatasetResponse) { return this->getSupportCityDataset(NULL, NULL, ns1__getSupportCityDataset, ns1__getSupportCityDatasetResponse); }
        /// Web service synchronous operation 'getSupportCityDataset' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getSupportCityDataset(const char *soap_endpoint_url, const char *soap_action, _ns1__getSupportCityDataset *ns1__getSupportCityDataset, _ns1__getSupportCityDatasetResponse &ns1__getSupportCityDatasetResponse) { return this->send_getSupportCityDataset(soap_endpoint_url, soap_action, ns1__getSupportCityDataset) || this->recv_getSupportCityDataset(ns1__getSupportCityDatasetResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getSupportCityDataset' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getSupportCityDataset(const char *soap_endpoint_url, const char *soap_action, _ns1__getSupportCityDataset *ns1__getSupportCityDataset);
        /// Web service asynchronous operation 'recv_getSupportCityDataset' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getSupportCityDataset(_ns1__getSupportCityDatasetResponse &ns1__getSupportCityDatasetResponse);
        //
        /// Web service synchronous operation 'getSupportCityString' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getSupportCityString(_ns1__getSupportCityString *ns1__getSupportCityString, _ns1__getSupportCityStringResponse &ns1__getSupportCityStringResponse) { return this->getSupportCityString(NULL, NULL, ns1__getSupportCityString, ns1__getSupportCityStringResponse); }
        /// Web service synchronous operation 'getSupportCityString' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getSupportCityString(const char *soap_endpoint_url, const char *soap_action, _ns1__getSupportCityString *ns1__getSupportCityString, _ns1__getSupportCityStringResponse &ns1__getSupportCityStringResponse) { return this->send_getSupportCityString(soap_endpoint_url, soap_action, ns1__getSupportCityString) || this->recv_getSupportCityString(ns1__getSupportCityStringResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getSupportCityString' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getSupportCityString(const char *soap_endpoint_url, const char *soap_action, _ns1__getSupportCityString *ns1__getSupportCityString);
        /// Web service asynchronous operation 'recv_getSupportCityString' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getSupportCityString(_ns1__getSupportCityStringResponse &ns1__getSupportCityStringResponse);
        //
        /// Web service synchronous operation 'getWeather' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getWeather(_ns1__getWeather *ns1__getWeather, _ns1__getWeatherResponse &ns1__getWeatherResponse) { return this->getWeather(NULL, NULL, ns1__getWeather, ns1__getWeatherResponse); }
        /// Web service synchronous operation 'getWeather' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getWeather(const char *soap_endpoint_url, const char *soap_action, _ns1__getWeather *ns1__getWeather, _ns1__getWeatherResponse &ns1__getWeatherResponse) { return this->send_getWeather(soap_endpoint_url, soap_action, ns1__getWeather) || this->recv_getWeather(ns1__getWeatherResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getWeather' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getWeather(const char *soap_endpoint_url, const char *soap_action, _ns1__getWeather *ns1__getWeather);
        /// Web service asynchronous operation 'recv_getWeather' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getWeather(_ns1__getWeatherResponse &ns1__getWeatherResponse);
        //
        /// Web service synchronous operation 'getRegionDataset' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getRegionDataset_(_ns1__getRegionDataset *ns1__getRegionDataset, _ns1__getRegionDatasetResponse &ns1__getRegionDatasetResponse) { return this->getRegionDataset_(NULL, NULL, ns1__getRegionDataset, ns1__getRegionDatasetResponse); }
        /// Web service synchronous operation 'getRegionDataset' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getRegionDataset_(const char *soap_endpoint_url, const char *soap_action, _ns1__getRegionDataset *ns1__getRegionDataset, _ns1__getRegionDatasetResponse &ns1__getRegionDatasetResponse) { return this->send_getRegionDataset_(soap_endpoint_url, soap_action, ns1__getRegionDataset) || this->recv_getRegionDataset_(ns1__getRegionDatasetResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getRegionDataset' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getRegionDataset_(const char *soap_endpoint_url, const char *soap_action, _ns1__getRegionDataset *ns1__getRegionDataset);
        /// Web service asynchronous operation 'recv_getRegionDataset' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getRegionDataset_(_ns1__getRegionDatasetResponse &ns1__getRegionDatasetResponse);
        //
        /// Web service synchronous operation 'getRegionProvince' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getRegionProvince_(_ns1__getRegionProvince *ns1__getRegionProvince, _ns1__getRegionProvinceResponse &ns1__getRegionProvinceResponse) { return this->getRegionProvince_(NULL, NULL, ns1__getRegionProvince, ns1__getRegionProvinceResponse); }
        /// Web service synchronous operation 'getRegionProvince' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getRegionProvince_(const char *soap_endpoint_url, const char *soap_action, _ns1__getRegionProvince *ns1__getRegionProvince, _ns1__getRegionProvinceResponse &ns1__getRegionProvinceResponse) { return this->send_getRegionProvince_(soap_endpoint_url, soap_action, ns1__getRegionProvince) || this->recv_getRegionProvince_(ns1__getRegionProvinceResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getRegionProvince' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getRegionProvince_(const char *soap_endpoint_url, const char *soap_action, _ns1__getRegionProvince *ns1__getRegionProvince);
        /// Web service asynchronous operation 'recv_getRegionProvince' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getRegionProvince_(_ns1__getRegionProvinceResponse &ns1__getRegionProvinceResponse);
        //
        /// Web service synchronous operation 'getRegionCountry' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getRegionCountry_(_ns1__getRegionCountry *ns1__getRegionCountry, _ns1__getRegionCountryResponse &ns1__getRegionCountryResponse) { return this->getRegionCountry_(NULL, NULL, ns1__getRegionCountry, ns1__getRegionCountryResponse); }
        /// Web service synchronous operation 'getRegionCountry' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getRegionCountry_(const char *soap_endpoint_url, const char *soap_action, _ns1__getRegionCountry *ns1__getRegionCountry, _ns1__getRegionCountryResponse &ns1__getRegionCountryResponse) { return this->send_getRegionCountry_(soap_endpoint_url, soap_action, ns1__getRegionCountry) || this->recv_getRegionCountry_(ns1__getRegionCountryResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getRegionCountry' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getRegionCountry_(const char *soap_endpoint_url, const char *soap_action, _ns1__getRegionCountry *ns1__getRegionCountry);
        /// Web service asynchronous operation 'recv_getRegionCountry' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getRegionCountry_(_ns1__getRegionCountryResponse &ns1__getRegionCountryResponse);
        //
        /// Web service synchronous operation 'getSupportCityDataset' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getSupportCityDataset_(_ns1__getSupportCityDataset *ns1__getSupportCityDataset, _ns1__getSupportCityDatasetResponse &ns1__getSupportCityDatasetResponse) { return this->getSupportCityDataset_(NULL, NULL, ns1__getSupportCityDataset, ns1__getSupportCityDatasetResponse); }
        /// Web service synchronous operation 'getSupportCityDataset' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getSupportCityDataset_(const char *soap_endpoint_url, const char *soap_action, _ns1__getSupportCityDataset *ns1__getSupportCityDataset, _ns1__getSupportCityDatasetResponse &ns1__getSupportCityDatasetResponse) { return this->send_getSupportCityDataset_(soap_endpoint_url, soap_action, ns1__getSupportCityDataset) || this->recv_getSupportCityDataset_(ns1__getSupportCityDatasetResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getSupportCityDataset' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getSupportCityDataset_(const char *soap_endpoint_url, const char *soap_action, _ns1__getSupportCityDataset *ns1__getSupportCityDataset);
        /// Web service asynchronous operation 'recv_getSupportCityDataset' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getSupportCityDataset_(_ns1__getSupportCityDatasetResponse &ns1__getSupportCityDatasetResponse);
        //
        /// Web service synchronous operation 'getSupportCityString' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getSupportCityString_(_ns1__getSupportCityString *ns1__getSupportCityString, _ns1__getSupportCityStringResponse &ns1__getSupportCityStringResponse) { return this->getSupportCityString_(NULL, NULL, ns1__getSupportCityString, ns1__getSupportCityStringResponse); }
        /// Web service synchronous operation 'getSupportCityString' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getSupportCityString_(const char *soap_endpoint_url, const char *soap_action, _ns1__getSupportCityString *ns1__getSupportCityString, _ns1__getSupportCityStringResponse &ns1__getSupportCityStringResponse) { return this->send_getSupportCityString_(soap_endpoint_url, soap_action, ns1__getSupportCityString) || this->recv_getSupportCityString_(ns1__getSupportCityStringResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getSupportCityString' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getSupportCityString_(const char *soap_endpoint_url, const char *soap_action, _ns1__getSupportCityString *ns1__getSupportCityString);
        /// Web service asynchronous operation 'recv_getSupportCityString' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getSupportCityString_(_ns1__getSupportCityStringResponse &ns1__getSupportCityStringResponse);
        //
        /// Web service synchronous operation 'getWeather' with default endpoint and default SOAP Action header, returns SOAP_OK or error code
        virtual int getWeather_(_ns1__getWeather *ns1__getWeather, _ns1__getWeatherResponse &ns1__getWeatherResponse) { return this->getWeather_(NULL, NULL, ns1__getWeather, ns1__getWeatherResponse); }
        /// Web service synchronous operation 'getWeather' to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int getWeather_(const char *soap_endpoint_url, const char *soap_action, _ns1__getWeather *ns1__getWeather, _ns1__getWeatherResponse &ns1__getWeatherResponse) { return this->send_getWeather_(soap_endpoint_url, soap_action, ns1__getWeather) || this->recv_getWeather_(ns1__getWeatherResponse) ? this->error : SOAP_OK; }
        /// Web service asynchronous operation 'send_getWeather' to send a request message to the specified endpoint and SOAP Action header, returns SOAP_OK or error code
        virtual int send_getWeather_(const char *soap_endpoint_url, const char *soap_action, _ns1__getWeather *ns1__getWeather);
        /// Web service asynchronous operation 'recv_getWeather' to receive a response message from the connected endpoint, returns SOAP_OK or error code
        virtual int recv_getWeather_(_ns1__getWeatherResponse &ns1__getWeatherResponse);
    };
#endif
